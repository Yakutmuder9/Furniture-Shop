{"ast":null,"code":"// import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n// import { baseUrl } from \"../../assets/baseUrl\";\n// import axios from \"axios\";\n// const fun = async () => {\n//   const { data } = await axios.get(`/products`)\n//   console.log(data)\n//   return data;\n// }\n// export const fetchProducts = createAsyncThunk(\n//   \"products/fetchProducts\",\n//   async () => {\n//     const { data } = await axios.get(`/products`)\n//     console.log(data)\n//     return data;\n//   }\n// );\n// const productsSlice = createSlice({\n//   name: \"products\",\n//   initialState: { isLoading: true, errMess: null, productsArray: [] },\n//   reducers: {},\n//   extraReducers: {\n//     [fetchProducts.pending]: (state) => {\n//       state.isLoading = true;\n//     },\n//     [fetchProducts.fulfilled]: (state, action) => {\n//       state.isLoading = false;\n//       state.errMess = null;\n//       state.productsArray = action.payload;\n//     },\n//     [fetchProducts.rejected]: (state, action) => {\n//       state.isLoading = false;\n//       state.errMess = action.error ? action.error.message : \"Fetch failed\";\n//     },\n//   },\n// });\n// export const productsReducer = productsSlice.reducer;","map":{"version":3,"names":[],"sources":["C:/Users/yakut/Desktop/Portfolio/FurnitureShop/client/src/redux/features/productSlices.js"],"sourcesContent":["\r\n// import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n// import { baseUrl } from \"../../assets/baseUrl\";\r\n// import axios from \"axios\";\r\n\r\n// const fun = async () => {\r\n//   const { data } = await axios.get(`/products`)\r\n//   console.log(data)\r\n//   return data;\r\n// }\r\n\r\n// export const fetchProducts = createAsyncThunk(\r\n//   \"products/fetchProducts\",\r\n//   async () => {\r\n//     const { data } = await axios.get(`/products`)\r\n//     console.log(data)\r\n//     return data;\r\n//   }\r\n// );\r\n\r\n\r\n// const productsSlice = createSlice({\r\n//   name: \"products\",\r\n//   initialState: { isLoading: true, errMess: null, productsArray: [] },\r\n//   reducers: {},\r\n//   extraReducers: {\r\n//     [fetchProducts.pending]: (state) => {\r\n//       state.isLoading = true;\r\n//     },\r\n//     [fetchProducts.fulfilled]: (state, action) => {\r\n//       state.isLoading = false;\r\n//       state.errMess = null;\r\n//       state.productsArray = action.payload;\r\n//     },\r\n//     [fetchProducts.rejected]: (state, action) => {\r\n//       state.isLoading = false;\r\n//       state.errMess = action.error ? action.error.message : \"Fetch failed\";\r\n//     },\r\n//   },\r\n// });\r\n\r\n// export const productsReducer = productsSlice.reducer;"],"mappings":"AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}