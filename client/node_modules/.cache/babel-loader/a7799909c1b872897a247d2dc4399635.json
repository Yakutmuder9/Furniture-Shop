{"ast":null,"code":"// import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n// export const getUsers = createAsyncThunk(\n//   \"users/getUsers\",\n//   async (dispatch, getState) => {\n//     return await fetch(\"https://jsonplaceholder.typicode.com/users\").then(\n//       (res) => res.json()\n//     );\n//   }\n// );\n// const usersSlice = createSlice({\n//   name: \"user\",\n//   initialState: {\n//     users: [],\n//     status: null,\n//   },\n//   extraReducers: {\n//     [getUsers.pending]: (state, action) => {\n//       state.status = \"loading\";\n//     },\n//     [getUsers.fulfilled]: (state, action) => {\n//       state.status = \"success\";\n//       state.users = action.payload;\n//     },\n//     [getUsers.rejected]: (state, action) => {\n//       state.status = \"failed\";\n//     },\n//   },\n// });\n// export const productsReducer = usersSlice.reducer;\n// export default usersSlice.reducer;\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { baseUrl } from \"../../assets/baseUrl\";\nimport axios from \"axios\";\n\nconst fun = async () => {\n  const {\n    data\n  } = await axios.get(`/products`);\n  console.log(data);\n  return data;\n};\n\nexport const fetchProducts = createAsyncThunk(\"products/fetchProducts\", async () => {\n  const {\n    data\n  } = await axios.get(`products`);\n  return data;\n} // async () => {\n//   const { data } = await axios.get(`/products`)\n//   console.log(data)\n//   return data;\n// }\n);\nconst productsSlice = createSlice({\n  name: \"products\",\n  initialState: {\n    isLoading: true,\n    errMess: null,\n    productsArray: []\n  },\n  reducers: {},\n  extraReducers: {\n    [fetchProducts.pending]: state => {\n      state.isLoading = true;\n    },\n    [fetchProducts.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.errMess = null;\n      state.productsArray = action.payload;\n    },\n    [fetchProducts.rejected]: (state, action) => {\n      state.isLoading = false;\n      state.errMess = action.error ? action.error.message : \"Fetch failed\";\n    }\n  }\n});\nexport const productsReducer = productsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","baseUrl","axios","fun","data","get","console","log","fetchProducts","productsSlice","name","initialState","isLoading","errMess","productsArray","reducers","extraReducers","pending","state","fulfilled","action","payload","rejected","error","message","productsReducer","reducer"],"sources":["C:/Users/yakut/Desktop/Portfolio/FurnitureShop/client/src/redux/features/productSlices.js"],"sourcesContent":["// import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\n// export const getUsers = createAsyncThunk(\r\n//   \"users/getUsers\",\r\n//   async (dispatch, getState) => {\r\n//     return await fetch(\"https://jsonplaceholder.typicode.com/users\").then(\r\n//       (res) => res.json()\r\n//     );\r\n//   }\r\n// );\r\n\r\n// const usersSlice = createSlice({\r\n//   name: \"user\",\r\n//   initialState: {\r\n//     users: [],\r\n//     status: null,\r\n//   },\r\n//   extraReducers: {\r\n//     [getUsers.pending]: (state, action) => {\r\n//       state.status = \"loading\";\r\n//     },\r\n//     [getUsers.fulfilled]: (state, action) => {\r\n//       state.status = \"success\";\r\n//       state.users = action.payload;\r\n//     },\r\n//     [getUsers.rejected]: (state, action) => {\r\n//       state.status = \"failed\";\r\n//     },\r\n//   },\r\n// });\r\n\r\n// export const productsReducer = usersSlice.reducer;\r\n// export default usersSlice.reducer;\r\n\r\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { baseUrl } from \"../../assets/baseUrl\";\r\nimport axios from \"axios\";\r\n\r\nconst fun = async () => {\r\n  const { data } = await axios.get(`/products`)\r\n  console.log(data)\r\n  return data;\r\n}\r\n\r\nexport const fetchProducts = createAsyncThunk(\r\n  \"products/fetchProducts\",\r\n  async () => {\r\n    const { data } = await axios.get(`products`)\r\n    return data\r\n  }\r\n  // async () => {\r\n  //   const { data } = await axios.get(`/products`)\r\n  //   console.log(data)\r\n  //   return data;\r\n  // }\r\n);\r\n\r\n\r\nconst productsSlice = createSlice({\r\n  name: \"products\",\r\n  initialState: { isLoading: true, errMess: null, productsArray: [] },\r\n  reducers: {},\r\n  extraReducers: {\r\n    [fetchProducts.pending]: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    [fetchProducts.fulfilled]: (state, action) => {\r\n      state.isLoading = false;\r\n      state.errMess = null;\r\n      state.productsArray = action.payload;\r\n    },\r\n    [fetchProducts.rejected]: (state, action) => {\r\n      state.isLoading = false;\r\n      state.errMess = action.error ? action.error.message : \"Fetch failed\";\r\n    },\r\n  },\r\n});\r\n\r\nexport const productsReducer = productsSlice.reducer;"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAG,GAAG,YAAY;EACtB,MAAM;IAAEC;EAAF,IAAW,MAAMF,KAAK,CAACG,GAAN,CAAW,WAAX,CAAvB;EACAC,OAAO,CAACC,GAAR,CAAYH,IAAZ;EACA,OAAOA,IAAP;AACD,CAJD;;AAMA,OAAO,MAAMI,aAAa,GAAGR,gBAAgB,CAC3C,wBAD2C,EAE3C,YAAY;EACV,MAAM;IAAEI;EAAF,IAAW,MAAMF,KAAK,CAACG,GAAN,CAAW,UAAX,CAAvB;EACA,OAAOD,IAAP;AACD,CAL0C,CAM3C;AACA;AACA;AACA;AACA;AAV2C,CAAtC;AAcP,MAAMK,aAAa,GAAGV,WAAW,CAAC;EAChCW,IAAI,EAAE,UAD0B;EAEhCC,YAAY,EAAE;IAAEC,SAAS,EAAE,IAAb;IAAmBC,OAAO,EAAE,IAA5B;IAAkCC,aAAa,EAAE;EAAjD,CAFkB;EAGhCC,QAAQ,EAAE,EAHsB;EAIhCC,aAAa,EAAE;IACb,CAACR,aAAa,CAACS,OAAf,GAA0BC,KAAD,IAAW;MAClCA,KAAK,CAACN,SAAN,GAAkB,IAAlB;IACD,CAHY;IAIb,CAACJ,aAAa,CAACW,SAAf,GAA2B,CAACD,KAAD,EAAQE,MAAR,KAAmB;MAC5CF,KAAK,CAACN,SAAN,GAAkB,KAAlB;MACAM,KAAK,CAACL,OAAN,GAAgB,IAAhB;MACAK,KAAK,CAACJ,aAAN,GAAsBM,MAAM,CAACC,OAA7B;IACD,CARY;IASb,CAACb,aAAa,CAACc,QAAf,GAA0B,CAACJ,KAAD,EAAQE,MAAR,KAAmB;MAC3CF,KAAK,CAACN,SAAN,GAAkB,KAAlB;MACAM,KAAK,CAACL,OAAN,GAAgBO,MAAM,CAACG,KAAP,GAAeH,MAAM,CAACG,KAAP,CAAaC,OAA5B,GAAsC,cAAtD;IACD;EAZY;AAJiB,CAAD,CAAjC;AAoBA,OAAO,MAAMC,eAAe,GAAGhB,aAAa,CAACiB,OAAtC"},"metadata":{},"sourceType":"module"}