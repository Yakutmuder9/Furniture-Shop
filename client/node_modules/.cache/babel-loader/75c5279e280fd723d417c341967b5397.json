{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { API_URL, HTTP_STATUS } from '../../app/constants';\nimport axios from 'axios';\nconst namespace = 'users';\nexport const fetchUsersData = createAsyncThunk(`${namespace}/fetchUsersData`, async () => {\n  const {\n    data\n  } = await axios.get(`${API_URL}/users-group`);\n  return data;\n});\nconst dashboardSlice = createSlice({\n  name: namespace,\n  initialState: {\n    loading: null,\n    data: null\n  },\n  reducers: {},\n  extraReducers: {\n    [fetchUsersData.pending](state) {\n      state.loading = HTTP_STATUS.PENDING;\n    },\n\n    [fetchUsersData.fulfilled](state, _ref) {\n      let {\n        payload\n      } = _ref;\n      state.loading = HTTP_STATUS.FULFILLED;\n      state.data = payload;\n    },\n\n    [fetchUsersData.rejected](state) {\n      state.loading = HTTP_STATUS.REJECTED;\n    }\n\n  }\n});\nexport const productsReducer = dashboardSlice.reducer; // import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n// import axios from \"axios\";\n// export const fetchProducts = createAsyncThunk(\n//   \"products/fetchProducts\",\n//   async () => {\n//     const { data } = await axios.get(`products`)\n//     console.log(data)\n//     return data\n//   }\n// );\n// const productsSlice = createSlice({\n//   name: \"products\",\n//   initialState: { isLoading: true, errMess: null, productsArray: [] },\n//   reducers: {},\n//   extraReducers: {\n//     [fetchProducts.pending]: (state) => {\n//       state.isLoading = true;\n//     },\n//     [fetchProducts.fulfilled]: (state, action) => {\n//       state.isLoading = false;\n//       state.errMess = null;\n//       state.productsArray = action.payload;\n//     },\n//     [fetchProducts.rejected]: (state, action) => {\n//       state.isLoading = false;\n//       state.errMess = action.error ? action.error.message : \"Fetch failed\";\n//     },\n//   },\n// });\n// export const productsReducer = productsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","API_URL","HTTP_STATUS","axios","namespace","fetchUsersData","data","get","dashboardSlice","name","initialState","loading","reducers","extraReducers","pending","state","PENDING","fulfilled","payload","FULFILLED","rejected","REJECTED","productsReducer","reducer"],"sources":["C:/Users/yakut/Desktop/Portfolio/FurnitureShop/client/src/redux/features/productSlices.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { API_URL, HTTP_STATUS } from '../../app/constants'\r\nimport axios from 'axios'\r\n\r\nconst namespace = 'users'\r\n\r\nexport const fetchUsersData = createAsyncThunk(\r\n  `${namespace}/fetchUsersData`,\r\n  async () => {\r\n    const { data } = await axios.get(`${API_URL}/users-group`)\r\n    return data\r\n  }\r\n)\r\n\r\nconst dashboardSlice = createSlice({\r\n  name: namespace,\r\n  initialState: {\r\n    loading: null,\r\n    data: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: {\r\n    [fetchUsersData.pending](state) {\r\n      state.loading = HTTP_STATUS.PENDING\r\n    },\r\n    [fetchUsersData.fulfilled](state, { payload }) {\r\n      state.loading = HTTP_STATUS.FULFILLED\r\n      state.data = payload\r\n    },\r\n    [fetchUsersData.rejected](state) {\r\n      state.loading = HTTP_STATUS.REJECTED\r\n    },\r\n  },\r\n})\r\n\r\nexport const productsReducer = dashboardSlice.reducer\r\n\r\n// import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n// import axios from \"axios\";\r\n\r\n// export const fetchProducts = createAsyncThunk(\r\n//   \"products/fetchProducts\",\r\n//   async () => {\r\n//     const { data } = await axios.get(`products`)\r\n//     console.log(data)\r\n//     return data\r\n//   }\r\n// );\r\n\r\n// const productsSlice = createSlice({\r\n//   name: \"products\",\r\n//   initialState: { isLoading: true, errMess: null, productsArray: [] },\r\n//   reducers: {},\r\n//   extraReducers: {\r\n//     [fetchProducts.pending]: (state) => {\r\n//       state.isLoading = true;\r\n//     },\r\n//     [fetchProducts.fulfilled]: (state, action) => {\r\n//       state.isLoading = false;\r\n//       state.errMess = null;\r\n//       state.productsArray = action.payload;\r\n//     },\r\n//     [fetchProducts.rejected]: (state, action) => {\r\n//       state.isLoading = false;\r\n//       state.errMess = action.error ? action.error.message : \"Fetch failed\";\r\n//     },\r\n//   },\r\n// });\r\n\r\n// export const productsReducer = productsSlice.reducer;"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,qBAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,SAAS,GAAG,OAAlB;AAEA,OAAO,MAAMC,cAAc,GAAGL,gBAAgB,CAC3C,GAAEI,SAAU,iBAD+B,EAE5C,YAAY;EACV,MAAM;IAAEE;EAAF,IAAW,MAAMH,KAAK,CAACI,GAAN,CAAW,GAAEN,OAAQ,cAArB,CAAvB;EACA,OAAOK,IAAP;AACD,CAL2C,CAAvC;AAQP,MAAME,cAAc,GAAGT,WAAW,CAAC;EACjCU,IAAI,EAAEL,SAD2B;EAEjCM,YAAY,EAAE;IACZC,OAAO,EAAE,IADG;IAEZL,IAAI,EAAE;EAFM,CAFmB;EAMjCM,QAAQ,EAAE,EANuB;EAOjCC,aAAa,EAAE;IACb,CAACR,cAAc,CAACS,OAAhB,EAAyBC,KAAzB,EAAgC;MAC9BA,KAAK,CAACJ,OAAN,GAAgBT,WAAW,CAACc,OAA5B;IACD,CAHY;;IAIb,CAACX,cAAc,CAACY,SAAhB,EAA2BF,KAA3B,QAA+C;MAAA,IAAb;QAAEG;MAAF,CAAa;MAC7CH,KAAK,CAACJ,OAAN,GAAgBT,WAAW,CAACiB,SAA5B;MACAJ,KAAK,CAACT,IAAN,GAAaY,OAAb;IACD,CAPY;;IAQb,CAACb,cAAc,CAACe,QAAhB,EAA0BL,KAA1B,EAAiC;MAC/BA,KAAK,CAACJ,OAAN,GAAgBT,WAAW,CAACmB,QAA5B;IACD;;EAVY;AAPkB,CAAD,CAAlC;AAqBA,OAAO,MAAMC,eAAe,GAAGd,cAAc,CAACe,OAAvC,C,CAEP;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}