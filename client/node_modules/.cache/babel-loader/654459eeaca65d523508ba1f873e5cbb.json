{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  cartItems: localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [],\n  cartTotalQuantity: 0,\n  cartTotalAmount: 0\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addToCart(state, action) {\n      const existingIndex = state.cartItems.findIndex(item => item._id === action.payload._id);\n\n      if (existingIndex >= 0) {\n        state.cartItems[existingIndex] = { ...state.cartItems[existingIndex],\n          cartQuantity: state.cartItems[existingIndex].cartQuantity + 1\n        };\n      } else {\n        let tempProductItem = { ...action.payload,\n          cartQuantity: 1\n        };\n        state.cartItems.push(tempProductItem);\n      }\n\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n    },\n\n    decreaseCart(state, action) {\n      const itemIndex = state.cartItems.findIndex(item => item._id === action.payload._id);\n\n      if (state.cartItems[itemIndex].cartQuantity > 1) {\n        state.cartItems[itemIndex].cartQuantity -= 1;\n      } else if (state.cartItems[itemIndex].cartQuantity === 1) {\n        const nextCartItems = state.cartItems.filter(item => item._id !== action.payload._id);\n        state.cartItems = nextCartItems;\n      }\n\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n    },\n\n    removeFromCart(state, action) {\n      state.cartItems.map(cartItem => {\n        if (cartItem._id === action.payload._id) {\n          const nextCartItems = state.cartItems.filter(item => item._id !== cartItem._id);\n          state.cartItems = nextCartItems;\n        }\n\n        localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n        return state;\n      });\n    },\n\n    getTotals(state, action) {\n      let {\n        total,\n        quantity\n      } = state.cartItems.reduce((cartTotal, cartItem) => {\n        const {\n          cost,\n          cartQuantity\n        } = cartItem;\n        const itemTotal = cost * cartQuantity;\n        cartTotal.total += itemTotal;\n        cartTotal.quantity += cartQuantity;\n        return cartTotal;\n      }, {\n        total: 0,\n        quantity: 0\n      });\n      total = parseFloat(total.toFixed(2));\n      state.cartTotalQuantity = quantity;\n      state.cartTotalAmount = total;\n    },\n\n    clearCart(state, action) {\n      state.cartItems = [];\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n    }\n\n  }\n});\nexport const {\n  addToCart,\n  decreaseCart,\n  removeFromCart,\n  getTotals,\n  clearCart\n} = cartSlice.actions;\nexport const productsReducer = productsSlice.reducer;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","cartItems","localStorage","getItem","JSON","parse","cartTotalQuantity","cartTotalAmount","cartSlice","name","reducers","addToCart","state","action","existingIndex","findIndex","item","_id","payload","cartQuantity","tempProductItem","push","setItem","stringify","decreaseCart","itemIndex","nextCartItems","filter","removeFromCart","map","cartItem","getTotals","total","quantity","reduce","cartTotal","cost","itemTotal","parseFloat","toFixed","clearCart","actions","productsReducer","productsSlice","reducer"],"sources":["C:/Users/yakut/Desktop/Portfolio/FurnitureShop/client/src/redux/features/CartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    cartItems: localStorage.getItem(\"cartItems\")\r\n        ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n        : [],\r\n    cartTotalQuantity: 0,\r\n    cartTotalAmount: 0,\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n    name: \"cart\",\r\n    initialState,\r\n    reducers: {\r\n        \r\n        addToCart(state, action) {\r\n            const existingIndex = state.cartItems.findIndex(\r\n              (item) => item._id === action.payload._id\r\n            );\r\n      \r\n            if (existingIndex >= 0) {\r\n              state.cartItems[existingIndex] = {\r\n                ...state.cartItems[existingIndex],\r\n                cartQuantity: state.cartItems[existingIndex].cartQuantity + 1,\r\n              };\r\n            } else {\r\n              let tempProductItem = { ...action.payload, cartQuantity: 1 };\r\n              state.cartItems.push(tempProductItem);\r\n            }\r\n            localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\r\n          },\r\n        decreaseCart(state, action) {\r\n            const itemIndex = state.cartItems.findIndex(\r\n                (item) => item._id === action.payload._id\r\n            );\r\n\r\n            if (state.cartItems[itemIndex].cartQuantity > 1) {\r\n                state.cartItems[itemIndex].cartQuantity -= 1;\r\n\r\n                \r\n            } else if (state.cartItems[itemIndex].cartQuantity === 1) {\r\n                const nextCartItems = state.cartItems.filter(\r\n                    (item) => item._id !== action.payload._id\r\n                );\r\n\r\n                state.cartItems = nextCartItems;\r\n            }\r\n\r\n            localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\r\n        },\r\n        removeFromCart(state, action) {\r\n            state.cartItems.map((cartItem) => {\r\n                if (cartItem._id === action.payload._id) {\r\n                    const nextCartItems = state.cartItems.filter(\r\n                        (item) => item._id !== cartItem._id\r\n                    );\r\n\r\n                    state.cartItems = nextCartItems;\r\n                }\r\n                localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\r\n                return state;\r\n            });\r\n        },\r\n        getTotals(state, action) {\r\n            let { total, quantity } = state.cartItems.reduce(\r\n                (cartTotal, cartItem) => {\r\n                    const { cost, cartQuantity } = cartItem;\r\n                    const itemTotal = cost * cartQuantity;\r\n\r\n                    cartTotal.total += itemTotal;\r\n                    cartTotal.quantity += cartQuantity;\r\n\r\n                    return cartTotal;\r\n                },\r\n                {\r\n                    total: 0,\r\n                    quantity: 0,\r\n                }\r\n            );\r\n            total = parseFloat(total.toFixed(2));\r\n            state.cartTotalQuantity = quantity;\r\n            state.cartTotalAmount = total;\r\n        },\r\n        clearCart(state, action) {\r\n            state.cartItems = [];\r\n            localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\r\n        },\r\n    },\r\n});\r\n\r\nexport const { addToCart, decreaseCart, removeFromCart, getTotals, clearCart } =\r\n    cartSlice.actions;\r\nexport const productsReducer = productsSlice.reducer;\r\nexport default cartSlice.reducer;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}