{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\"; // export const fetchProducts = createAsyncThunk(\n//   \"products/fetchProducts\",\n//   async () => {\n//     const { data } = await axios.get(`products`)\n//     console.log(data)\n//     return data\n//   }\n// );\n// const productsSlice = createSlice({\n//   name: \"products\",\n//   initialState: { isLoading: true, errMess: null, productsArray: [] },\n//   reducers: {},\n//   extraReducers: {\n//     [fetchProducts.pending]: (state) => {\n//       state.isLoading = true;\n//     },\n//     [fetchProducts.fulfilled]: (state, action) => {\n//       state.isLoading = false;\n//       state.errMess = null;\n//       state.productsArray = action.payload;\n//     },\n//     [fetchProducts.rejected]: (state, action) => {\n//       state.isLoading = false;\n//       state.errMess = action.error ? action.error.message : \"Fetch failed\";\n//     },\n//   },\n// });\n// export const productsReducer = productsSlice.reducer;\n\nexport const getPosts = createAsyncThunk('posts/getPosts', async (arg, _ref) => {\n  let {\n    dispatch,\n    getState,\n    extra,\n    requestId,\n    signal,\n    rejectWithValue\n  } = _ref;\n  return fetch(`https://jsonplaceholder.typicode.com/posts?_limit=${arg.limit}`).then(res => {\n    if (!res.ok) {\n      return rejectWithValue([], \"api url not found from\");\n    }\n\n    return res.json();\n  }).catch(error => {\n    return rejectWithValue([], error);\n  });\n});","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","getPosts","arg","dispatch","getState","extra","requestId","signal","rejectWithValue","fetch","limit","then","res","ok","json","catch","error"],"sources":["C:/Users/yakut/Desktop/Portfolio/FurnitureShop/client/src/redux/features/productSlices.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\n// export const fetchProducts = createAsyncThunk(\r\n//   \"products/fetchProducts\",\r\n//   async () => {\r\n//     const { data } = await axios.get(`products`)\r\n//     console.log(data)\r\n//     return data\r\n//   }\r\n// );\r\n\r\n// const productsSlice = createSlice({\r\n//   name: \"products\",\r\n//   initialState: { isLoading: true, errMess: null, productsArray: [] },\r\n//   reducers: {},\r\n//   extraReducers: {\r\n//     [fetchProducts.pending]: (state) => {\r\n//       state.isLoading = true;\r\n//     },\r\n//     [fetchProducts.fulfilled]: (state, action) => {\r\n//       state.isLoading = false;\r\n//       state.errMess = null;\r\n//       state.productsArray = action.payload;\r\n//     },\r\n//     [fetchProducts.rejected]: (state, action) => {\r\n//       state.isLoading = false;\r\n//       state.errMess = action.error ? action.error.message : \"Fetch failed\";\r\n//     },\r\n//   },\r\n// });\r\n\r\n// export const productsReducer = productsSlice.reducer;\r\n\r\n\r\n\r\nexport const getPosts = createAsyncThunk(\r\n  'posts/getPosts',\r\n\r\n  async (arg, { dispatch, getState, extra, requestId, signal, rejectWithValue }) => {\r\n    \r\n      return fetch(\r\n          `https://jsonplaceholder.typicode.com/posts?_limit=${arg.limit}`\r\n      ).then((res) => {\r\n          if (!res.ok) {\r\n              \r\n              return rejectWithValue([], \"api url not found from\");\r\n          }\r\n          return res.json()\r\n      }).catch(error => {\r\n         \r\n          return rejectWithValue([], error);\r\n         \r\n      })\r\n  }\r\n\r\n)"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAIA,OAAO,MAAMC,QAAQ,GAAGF,gBAAgB,CACtC,gBADsC,EAGtC,OAAOG,GAAP,WAAkF;EAAA,IAAtE;IAAEC,QAAF;IAAYC,QAAZ;IAAsBC,KAAtB;IAA6BC,SAA7B;IAAwCC,MAAxC;IAAgDC;EAAhD,CAAsE;EAE9E,OAAOC,KAAK,CACP,qDAAoDP,GAAG,CAACQ,KAAM,EADvD,CAAL,CAELC,IAFK,CAECC,GAAD,IAAS;IACZ,IAAI,CAACA,GAAG,CAACC,EAAT,EAAa;MAET,OAAOL,eAAe,CAAC,EAAD,EAAK,wBAAL,CAAtB;IACH;;IACD,OAAOI,GAAG,CAACE,IAAJ,EAAP;EACH,CARM,EAQJC,KARI,CAQEC,KAAK,IAAI;IAEd,OAAOR,eAAe,CAAC,EAAD,EAAKQ,KAAL,CAAtB;EAEH,CAZM,CAAP;AAaH,CAlBqC,CAAjC"},"metadata":{},"sourceType":"module"}